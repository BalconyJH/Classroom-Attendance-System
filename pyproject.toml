[project]
name = "Classroom-Attendance-System"
version = "0.1.0"
description = "Default template for PDM package"
authors = [
    {name = "BalconyJH", email = "balconyjh@gmail.com"},
]
dependencies = [
    "dlib>=19.24.2",
    "numpy>=1.26.3",
    "opencv-python>=4.9.0.80",
    "scikit-image>=0.22.0",
    "flask[async]>=3.0.1",
    "Flask-SQLAlchemy>=3.1.1",
    "pandas>=2.1.4",
    "pymysql>=1.1.0",
    "sentry-sdk[flask]~=1.40",
    "setuptools>=69.0.3",
    "pydantic>=2.5.3",
    "pydantic-settings>=2.1.0",
    "cryptography>=41.0.7",
    "Flask-Migrate~=4.0",
    "scikit-learn~=1.4",
    "loguru~=0.7",
    "xlsxwriter~=3.2",
]
requires-python = ">=3.9"
readme = "README.md"
license = { text = "GPL-3.0 license" }

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
'''

[tool.isort]
profile = "black"
line_length = 120
length_sort = true
skip_gitignore = true
force_sort_within_sections = true
src_paths = ["app", "tests"]
extra_standard_library = ["typing_extensions"]

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = [
    "F",     # Pyflakes
    "W",     # pycodestyle warnings
    "E",     # pycodestyle errors
    "UP",    # pyupgrade
    "ASYNC", # flake8-async
    "C4",    # flake8-comprehensions
    "T10",   # flake8-debugger
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "RUF",   # Ruff-specific rules
]
ignore = [
    "E402",   # module-import-not-at-top-of-file
    "UP037",  # quoted-annotation
    "RUF001", # ambiguous-unicode-character-string
    "RUF002", # ambiguous-unicode-character-docstring
    "RUF003", # ambiguous-unicode-character-comment
]
exclude = ["app/static/**", "app/tempplates/**", "migrations/**"]

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
length-sort = true
force-sort-within-sections = true
extra-standard-library = ["typing_extensions"]

[tool.pyright]
pythonVersion = "3.9"
pythonPlatform = "All"
executionEnvironments = [
    { root = "./tests", extraPaths = [
        "./",
    ] },
    { root = "./" },
]

typeCheckingMode = "basic"
reportShadowedImports = false
disableBytesTypePromotions = true

[tool.pdm]
distribution = false

[tool.pytest.ini_options]
asyncio_mode = "auto"